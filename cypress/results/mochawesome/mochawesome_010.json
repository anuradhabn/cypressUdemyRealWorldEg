{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-02-28T12:49:30.668Z",
    "end": "2024-02-28T12:49:34.532Z",
    "duration": 3864,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8e154c8b-a01f-4c91-87d4-89bc6c68d026",
      "title": "",
      "fullFile": "cypress\\e2e\\Test.spec.cy.js",
      "file": "cypress\\e2e\\Test.spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f64bb66a-6e7c-40df-92d7-9d0797efb8c7",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Intercepting & Modifying the request&response(Verify correct request & response)",
              "fullTitle": "Test with backend Intercepting & Modifying the request&response(Verify correct request & response)",
              "timedOut": null,
              "duration": 996,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('POST','**/articles',(interceptedReq)=>{\n//   interceptedReq.body.article.description = \"This is intercepted description2\"\n// }).as('postArticles')\ncy.intercept('POST', '**/articles', actualReq => {\n  //reply is a method of Cypress sorta representing response\n  actualReq.reply(res => {\n    //actually validating the correct value in the below line\n    expect(res.body.article.description).to.equal(\"This is the description\");\n    //then later on replacing it with intercepted response\n    res.body.article.description = \"This is intercepted description2\";\n  });\n}).as('postArticles');\ncy.get('[routerlink=\"/editor\"]').click();\ncy.get('[placeholder=\"Article Title\"]').type(\"New Article Title\");\ncy.get('[formcontrolname=\"description\"]').type(\"This is the description\");\n//although we have a line above for \"This is the desciption\", since we are now intercepting the call before it\n//gets to this point, we are even asserting \"This is intercepted description2\"\ncy.get('[formcontrolname=\"body\"]').type(\"This is the body\");\ncy.contains('Publish Article ').click();\ncy.wait(1500);\ncy.wait('@postArticles').then(xhr => {\n  console.log(xhr);\n  //Assertion on the Reponse elements\n  expect(xhr.response.statusCode).to.be.equal(201);\n  expect(xhr.request.body.article.body).to.equal('This is the body');\n  expect(xhr.response.body.article.description).to.equal(\"This is intercepted description2\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/users/login\n\nThe response we received from your web server was:\n\n  > 503: Service Unavailable\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/users/login\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/121.0.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 72\n}\nBody: {\"user\":{\"email\":\"anu.bengaluru@gmail.com\",\"password\":\"Ganapathi2024!\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 503 - Service Unavailable\nHeaders: {\n  \"date\": \"Wed, 28 Feb 2024 12:49:33 GMT\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"transfer-encoding\": \"chunked\",\n  \"connection\": \"keep-alive\",\n  \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?ts=1709124573&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ydT%2BXl72NklW9Xb2LxOK22J%2BVFbiOnwO2rS385ojJMI%3D\\\"}]}\",\n  \"reporting-endpoints\": \"heroku-nel=https://nel.heroku.com/reports?ts=1709124573&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ydT%2BXl72NklW9Xb2LxOK22J%2BVFbiOnwO2rS385ojJMI%3D\",\n  \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"success_fraction\\\":0.005,\\\"failure_fraction\\\":0.05,\\\"response_headers\\\":[\\\"Via\\\"]}\",\n  \"cache-control\": \"no-cache, no-store\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"85c8c9c92ad043a3-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n}\nBody: <!DOCTYPE html>\n\t<html>\n\t  <head>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Application Error</title>\n\t\t<style media=\"screen\">\n\t\t  html,body,iframe {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t  }\n\t\t  html,body {\n\t\t\theight: 100%;\n\t\t\toverflow: hidden;\n\t\t  }\n\t\t  iframe {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tborder: 0;\n\t\t  }\n\t\t</style>\n\t  </head>\n\t  <body>\n\t\t<iframe src=\"//www.herokucdn.com/error-pages/application-error.html\"></iframe>\n\t  </body>\n\t</html>\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Test with backend`",
                "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.realworld.io/api/users/login\n\nThe response we received from your web server was:\n\n  > 503: Service Unavailable\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: POST\nURL: https://api.realworld.io/api/users/login\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/121.0.0.0 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 72\n}\nBody: {\"user\":{\"email\":\"anu.bengaluru@gmail.com\",\"password\":\"Ganapathi2024!\"}}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 503 - Service Unavailable\nHeaders: {\n  \"date\": \"Wed, 28 Feb 2024 12:49:33 GMT\",\n  \"content-type\": \"text/html; charset=utf-8\",\n  \"transfer-encoding\": \"chunked\",\n  \"connection\": \"keep-alive\",\n  \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?ts=1709124573&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ydT%2BXl72NklW9Xb2LxOK22J%2BVFbiOnwO2rS385ojJMI%3D\\\"}]}\",\n  \"reporting-endpoints\": \"heroku-nel=https://nel.heroku.com/reports?ts=1709124573&sid=c46efe9b-d3d2-4a0c-8c76-bfafa16c5add&s=ydT%2BXl72NklW9Xb2LxOK22J%2BVFbiOnwO2rS385ojJMI%3D\",\n  \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"max_age\\\":3600,\\\"success_fraction\\\":0.005,\\\"failure_fraction\\\":0.05,\\\"response_headers\\\":[\\\"Via\\\"]}\",\n  \"cache-control\": \"no-cache, no-store\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"server\": \"cloudflare\",\n  \"cf-ray\": \"85c8c9c92ad043a3-EWR\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n}\nBody: <!DOCTYPE html>\n\t<html>\n\t  <head>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Application Error</title>\n\t\t<style media=\"screen\">\n\t\t  html,body,iframe {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t  }\n\t\t  html,body {\n\t\t\theight: 100%;\n\t\t\toverflow: hidden;\n\t\t  }\n\t\t  iframe {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tborder: 0;\n\t\t  }\n\t\t</style>\n\t  </head>\n\t  <body>\n\t\t<iframe src=\"//www.herokucdn.com/error-pages/application-error.html\"></iframe>\n\t  </body>\n\t</html>\n\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Test with backend`\n    at <unknown> (https://angular.realworld.how/__cypress/runner/cypress_runner.js:133450:72)\n    at tryCatcher (https://angular.realworld.how/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://angular.realworld.how/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://angular.realworld.how/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://angular.realworld.how/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://angular.realworld.how/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://angular.realworld.how/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://angular.realworld.how/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://angular.realworld.how/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://angular.realworld.how/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypress_cu/./cypress/support/commands.js:56:7)",
                "diff": null
              },
              "uuid": "90e2a02b-b720-40c6-9758-875c452ffa1f",
              "parentUUID": "f64bb66a-6e7c-40df-92d7-9d0797efb8c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "90e2a02b-b720-40c6-9758-875c452ffa1f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 996,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": "false",
        "html": "false",
        "json": "true"
      },
      "version": "6.2.0"
    }
  }
}